package Laucher;

import java.awt.EventQueue;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import javax.swing.JButton;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Toolkit;
import javax.swing.JPanel;

public class DlgConfigurarCuotaDiaria extends JDialog implements ActionListener{

	private static final long serialVersionUID = 1L;
	
	private JTextField textField;
	private JButton btnCancelar;
	private JButton btnAceptar;

	/**
	 * Launch the application.
	 */
public static void main(String[] args) {
		
		/*AQUI SE HACE REFERENCIA A flatlaf PARA EL UI DESIGN*/
		try {
			UIManager.setLookAndFeel(new FlatMacLightLaf());
			/*AQUI LA LISTA DE ESTILOS QUE PUEDES USAR*/
			/**
			 * UIManager.setLookAndFeel(new FlatLightLaf());
			 * UIManager.setLookAndFeel(new FlatDarkLaf());
			 * UIManager.setLookAndFeel(new FlatIntelliJLaf());
			 * UIManager.setLookAndFeel(new FlatDarculaLaf());
			 * UIManager.setLookAndFeel(new FlatMacLightLaf());
			 * UIManager.setLookAndFeel(new FlatMacDarkLaf());
			 */
			
		} catch (UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DlgConfigurarCuotaDiaria dialog = new DlgConfigurarCuotaDiaria();
					dialog.setLocationRelativeTo(null);
					dialog.setVisible(true);
					dialog.setResizable(false); 
				}
				catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	/**
	 * Create the dialog.
	 */
	public DlgConfigurarCuotaDiaria() {
		setFont(new Font("Dialog", Font.BOLD, 13));
		setIconImage(Toolkit.getDefaultToolkit().getImage(DlgConfigurarCuotaDiaria.class.getResource("/imagenes/bolsa-de-dinero.png")));
		setTitle("Configurar Cantidad Optima");
	
	getContentPane().setBackground(new Color(245, 247, 248));
	setBounds(100, 100, 571, 189);
	setResizable(false);
	getContentPane().setLayout(null);
	
	btnAceptar = new JButton("Aceptar");

	btnAceptar.setForeground(Color.WHITE);
	btnAceptar.addActionListener(this);
	btnAceptar.setFont(new Font("Verdana", Font.BOLD, 12));
	btnAceptar.setBackground(new Color(73, 94, 87));
	btnAceptar.setBounds(126, 77, 135, 36);
	getContentPane().add(btnAceptar);
	
	btnCancelar = new JButton("Cancelar");
	
	btnCancelar.setForeground(Color.WHITE);
	btnCancelar.addActionListener(this);
	btnCancelar.setFont(new Font("Verdana", Font.BOLD, 12));
	btnCancelar.setBackground(new Color(73, 94, 87));
	btnCancelar.setBounds(293, 77, 135, 36);
	getContentPane().add(btnCancelar);
	
	JPanel panel = new JPanel();
	panel.setForeground(Color.WHITE);
	panel.setBackground(new Color(73, 94, 87));
	panel.setBounds(0, 0, 555, 17);
	getContentPane().add(panel);
	
	textField = new JTextField();
	textField.setFont(new Font("Verdana", Font.BOLD, 12));
	textField.setBounds(325, 28, 207, 29);
	getContentPane().add(textField);
	textField.setColumns(10);
	
	JLabel lblNewLabel = new JLabel("Cantidad optima de unidades vendidas : ");
	lblNewLabel.setBackground(new Color(245, 247, 248));
	lblNewLabel.setForeground(Color.BLACK);
	lblNewLabel.setFont(new Font("Verdana", Font.BOLD, 13));
	lblNewLabel.setBounds(25, 33, 307, 17);
	getContentPane().add(lblNewLabel);
	
	JPanel panel_1 = new JPanel();
	panel_1.setForeground(Color.WHITE);
	panel_1.setBackground(new Color(73, 94, 87));
	panel_1.setBounds(0, 133, 555, 17);
	getContentPane().add(panel_1);
}

	//Direcciona eventos de tipo ActionEvent
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnCancelar) {
			actionPerformedbtnCancelar(e);
		}
		if (e.getSource() == btnAceptar) {
			actionPerformedbtnAceptar(e);
		}
			
	}

	protected void actionPerformedbtnAceptar(ActionEvent e) {
		// Declaracion de Variables
		String valorIngresado;
		int Cuota;

		// Obtener el valor ingresado desde el campo de texto
		valorIngresado = textField.getText();

		try {
			// Convierte el valor ingresado a un entero
			Cuota = Integer.parseInt(valorIngresado);
			// Verificar si el valor ingresado es un número positivo
			if (Cuota > 0) {
				// Mostrar un mensaje de guardado con éxito si la cantidad es válida
				JOptionPane.showMessageDialog(DlgConfigurarCuotaDiaria.this, "Cambios guardados con éxito", "Éxito",
						JOptionPane.INFORMATION_MESSAGE);
			} else {
				// Mostrar un mensaje de error si la cantidad no es válida
				JOptionPane.showMessageDialog(DlgConfigurarCuotaDiaria.this, "Por favor, ingrese un número positivo",
						"Error", JOptionPane.ERROR_MESSAGE);
			}

		} catch (NumberFormatException ex) {
			// Mostrar un mensaje de error si no se pudo convertir a entero (no es un número
			// válido)
			JOptionPane.showMessageDialog(DlgConfigurarCuotaDiaria.this, "Por favor, ingrese un número válido", "Error",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		// actualiza la cuota diaria
		Menu.cuotaDiaria = Cuota;
	}

	protected void actionPerformedbtnCancelar(ActionEvent e) {
		dispose();

	}
}